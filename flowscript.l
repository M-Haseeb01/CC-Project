%{
#include "ast.h"            // Include ast.h first for OperatorType etc.
#include "flowscript.tab.h" // Generated by Bison
#include <string.h>

#ifdef _WIN32
    #include <io.h>
    #define isatty _isatty
#else
    #include <unistd.h>
#endif

// yylineno is provided by Flex via %option yylineno
%}

%option noyywrap nounput noinput yylineno

DIGIT    [0-9]
ID       [a-zA-Z_][a-zA-Z0-9_]*

%%

"func"            { return T_FUNC; }
"return"          { return T_RETURN; }
"if"              { return T_IF; }
"else"            { return T_ELSE; }
"for"             { return T_FOR; }
"each"            { return T_EACH; }
"range"           { return T_RANGE; }
"print"           { yylval.sval = strdup(yytext); return T_PRINT; } // Return as T_PRINT, lexeme can be useful if print becomes overloadable

"and"             { return T_AND; }
"or"              { return T_OR; }
"not"             { return T_NOT; }


{DIGIT}+          { yylval.ival = atoi(yytext); return T_NUMBER; }
{ID}              { yylval.sval = strdup(yytext); return T_IDENTIFIER; }

"|>"              { return T_PIPE; }
"="               { return T_ASSIGN; }
"=="              { return T_EQ; }
"!="              { return T_NEQ; }
"<"               { return T_LT; }
">"               { return T_GT; }
"<="              { return T_LTE; }
">="              { return T_GTE; }
"+"               { return T_PLUS; }
"-"               { return T_MINUS; }
"*"               { return T_MULTIPLY; }
"/"               { return T_DIVIDE; }
"("               { return T_LPAREN; }
")"               { return T_RPAREN; }
"{"               { return T_LBRACE; }
"}"               { return T_RBRACE; }
","               { return T_COMMA; }
";"               { return T_SEMICOLON; }


[ \t\r]+          { /* Skip whitespace */ }
\n                { /* yylineno is automatically incremented by Flex */ }
"//".*           { /* Skip single-line comments */ }
"/*"([^*]|\*+[^*/])*\*+"/" { /* Skip multi-line comments */ }


.                 { fprintf(stderr, "Line %d: Unexpected character '%c'\n", yylineno, yytext[0]); }

%%
// No yywrap needed due to %option noyywrap
